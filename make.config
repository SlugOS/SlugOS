# Configuration for building SlugOS

# This is the architecture of the device you are targetting
# Read docs/arch.md to find the supported architectures
ARCH= i686

ifeq ($(ARCH),x86_64)
    CFLAGS = -g -c -ffreestanding -mcmodel=large -mno-red-zone -mno-mmx -mno-sse2 -Wall -Wextra -Ikernel/headers -fstack-protector-all
    # Assembler and compiler
    AS_ARCH = elf64
    AS = nasm -f$(AS_ARCH)
    CC = $(ARCH)-elf-gcc
else ifeq ($(ARCH),i686)
    CFLAGS = -g -c -std=gnu99 -ffreestanding -Wall -Wextra -Ikernel/headers -fstack-protector-all
    # Assembler and compiler
    AS_ARCH = elf32
    AS = nasm -f$(AS_ARCH)
    CC = $(ARCH)-elf-gcc
else
    $(error Unsupported ARCH value: $(ARCH))
endif

# Extra flags, read docs/flags.md for explaination of supported flags
EXTRA_DEFINES ?= $(ARCH) DEBUG

# Assembly flags
ASFLAGS = -f$(AS_ARCH) -g

# Flags for QEMU
QEMUFLAGS =

# Linker flags
LDFLAGS = -ffreestanding -O2 -nostdlib -g

CFLAGS += $(foreach DEFINE,$(EXTRA_DEFINES),-D$(DEFINE))
CXXFLAGS += $(foreach DEFINE,$(EXTRA_DEFINES),-D$(DEFINE))

# Source files
SRCS = $(shell find kernel -name "*.s" -o -name "*.c") $(shell find arch/$(ARCH) -name "*.s" -o -name "*.c")

# Kernel target and object files
TARGET = slug.elf
OBJS = $(SRCS:.s=.o)
OBJS := $(OBJS:.c=.o)
OBJS := $(OBJS:.cpp=.o)
